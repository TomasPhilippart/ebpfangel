{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"#ebpfangel-ransomware-detection-using-machine-learning-with-ebpf-for-linux","title":"ebpfangel - Ransomware Detection using Machine Learning with eBPF for Linux","text":"<p>Authors: Max Willers, Tom\u00e1s Philippart</p> <p>This is the final result of an Offensive Technologies research project for the MSc Security and Network Engineering program of the University of Amsterdam. This is not intended to be a final product/solution to use in any productions environment whatsoever, it is simply the byproduct of research and therefore is intended to use as so. </p> <p>Slides, Paper</p>"},{"location":"#software-architecture","title":"Software architecture","text":"<pre><code>flowchart LR\n  subgraph sandbox_VM\n    ransomware\n  end\n  ransomware --&gt; network_hook &amp; filesystem_hooks &amp; crypto_hooks\n  subgraph host_kernel\n    network_hook &amp; filesystem_hooks &amp; crypto_hooks --&gt; ebpf_c\n\n  end\n  subgraph host_userland\n    ebpf_c -- events --&gt; ebpf_python\n    ebpf_python -- patterns + config --&gt; ebpf_c\n    ebpf_python --&gt; machine_learning\n  end</code></pre>"},{"location":"#ebpf-c-program","title":"eBPF C program","text":"<pre><code>flowchart LR\n  A(event) --&gt; B(compute stats &lt;br/&gt;per pid)\n  B --&gt; C(detect event pattern &lt;br/&gt;and threshold counts)\n  X(python) -. patterns + config .-&gt; C\n  C --&gt; D{report event?}\n  D -- yes --&gt; E(submit event &lt;br/&gt;to ring buffer) --&gt;F(end)\n  D -- no --&gt; F</code></pre>"},{"location":"#learning-resources-and-references","title":"Learning resources and references","text":"<ul> <li> <p>UNVEIL: A Large-Scale, Automated Approach to Detecting Ransomware (Kharraz et al., 2016-08)</p> </li> <li> <p>A Multi-Classifier Network-Based Crypto Ransomware Detection System: A Case Study of Locky Ransomware (Almashhadani et al., 2019-03)</p> </li> <li> <p>Ransomware: Recent advances, analysis, challenges and future research directions (Beaman et al., 2021-12)</p> </li> <li> <p>Ransomware deployment methods and analysis: views from a predictive model and human responses (Hull et al., 2019-02)</p> </li> <li> <p>An empirical study of ransomware attacks on organizations: an assessment of severity and salient factors affecting vulnerability (Yuryna Connolly et al., 2020-01-01)</p> </li> <li> <p>Introduction of the ARDS\u2014Anti-Ransomware Defense System Model\u2014Based on the Systematic Review of Worldwide Ransomware Attacks (Sz\u00fccs et al., 2021-01)</p> </li> <li> <p>The rise of ransomware: Forensic analysis for windows based ransomware attacks (Kara &amp; Aydos, 2022-03-15)</p> </li> <li> <p>Ransomware detection using machine learning algorithms (Bae et al., 2020)</p> </li> <li> <p>A comprehensive survey on deep learning based malware detection techniques (Gopinath &amp; Chakkaravarthy Sethuraman, 2023-02-01)</p> </li> <li> <p>A behavioral analysis of the ransomware strain NEFILIM (Groenewegen et al., 2020-10-25)</p> </li> <li> <p>The State of Ransomware 2022 (SOPHOS, 2022-04)</p> </li> <li> <p>IceFire ransomware now encrypts both Linux and Windows systems (Gatlan, 2023-03-09)</p> </li> <li> <p>What is eBPF? An Introduction and Deep Dive into the eBPF Technology</p> </li> <li> <p>BCC (IO Visor Project)</p> </li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>To foster progress in the field of ransomware detection, collaboration and knowledge sharing within the research community are essential. Encouraging open collaboration, sharing of datasets, methodologies, and findings will enable researchers to collectively combat the growing threat of ransomware attacks. By fostering collaboration, we can pool resources and expertise to develop more advanced and robust ransomware detection techniques, ultimately enhancing the overall security posture against this persistent threat.</p> <p>If you are forking this project for your own uses, please consider creating a Pull Request with your changes.</p> <p>There are some open (un-assigned) issues created that would be good for new comers and people who would like to contribute to the project.</p>"},{"location":"#license","title":"License","text":"<p>The MIT License (MIT). Please see License File for more information.</p>"},{"location":"detector/","title":"Detector","text":""},{"location":"detector/#detector","title":"Detector","text":"<p>The detector currently uses BCC (BPF Compiler Collection) and consists of 2 parts: - kernel space: eBPF program written in C and attached to various hooks, see detection methods     - tracepoints on open/openat and unlink/unlinkat syscall     - uprobe on libcrypto.so functions (EVP_EncryptInit_ex, EVP_CipherInit_ex and EVP_SealInit) - user space: python program that reads data from the eBPF ring buffer output map</p> <p>This data can then be post-processed in python by a machine learning algorithm like k-NN, SVM, RNN and others (eg. with scikit-learn or tensorflow).</p> <p>Note: as an exercise these programs could also be implemented with: - libbpf-bootstrap - both kernel &amp; user space written in C - or libbpfgo - only for the user-space program (replacing python)</p> <pre><code># generate vmlinux.h when using libbpf\n$ bpftool btf dump file /sys/kernel/btf/vmlinux format c &gt; vmlinux.h\n</code></pre>"},{"location":"detector/#bcc-bpf-compiler-collection","title":"BCC (BPF Compiler Collection)","text":"<p>BCC is a toolkit for creating efficient kernel tracing and manipulation programs, and includes several useful tools and examples. It makes use of extended BPF (Berkeley Packet Filters), formally known as eBPF, a new feature that was first added to Linux 3.15. Much of what BCC uses requires Linux 4.1 and above.</p> <p>See explanations, sample programs, available hooks and format in bcc.</p> <p>See also BCC reference guide.</p>"},{"location":"detector/#install-bcc","title":"Install BCC","text":"<p>Follow: https://github.com/iovisor/bcc</p> <pre><code># example for debian\n$ echo deb http://cloudfront.debian.net/debian sid main &gt;&gt; /etc/apt/sources.list\n$ sudo apt-get install -y bpfcc-tools libbpfcc libbpfcc-dev linux-headers-$(uname -r)\n</code></pre>"},{"location":"detector/#running-the-detector","title":"Running the detector","text":"<pre><code>$ sudo ./detector.py\n</code></pre>"},{"location":"detector/#sample-output","title":"Sample output","text":"<p>Displays file access events with: - PID: process ID - TYPE: type of event (0=open, 1=create, 2=delete) - FLAG: indicates the event severity - PATT: indicates a pattern match (for example a sequence of open, create, delete) - TRESH: indicate which types of event exceed the threshold (number of events &gt; 50) - FILENAME: file name or crypto function in question</p> <pre><code>Printing file &amp; crypto events, ctrl-c to exit.\nPID    TYPE FLAG PATT TRESH FILENAME\n26858  Enc  MIN  -     ---E EVP_EncryptInit_ex\n26858  Enc  MIN  -     ---E EVP_EncryptInit_ex\n26858  Enc  MIN  -     ---E EVP_EncryptInit_ex\n26858  Enc  MIN  -     ---E EVP_EncryptInit_ex\n28178  Del  MAJ  Match OCD- /tmp/tmp8imczwuu/Asia/Shanghai\n28178  Open MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Jayapura\n28178  Crea MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Jayapura.aes\n28178  Del  MAJ  Match OCD- /tmp/tmp8imczwuu/Asia/Jayapura\n28178  Open MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Harbin\n28178  Crea MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Harbin.aes\n28178  Del  MAJ  Match OCD- /tmp/tmp8imczwuu/Asia/Harbin\n28178  Open MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Irkutsk\n28178  Crea MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Irkutsk.aes\n28178  Del  MAJ  Match OCD- /tmp/tmp8imczwuu/Asia/Irkutsk\n28178  Open MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Bangkok\n28178  Crea MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Bangkok.aes\n28178  Del  MAJ  Match OCD- /tmp/tmp8imczwuu/Asia/Bangkok\n28178  Open MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Sakhalin\n28178  Crea MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Sakhalin.aes\n28178  Del  MAJ  Match OCD- /tmp/tmp8imczwuu/Asia/Sakhalin\n28178  Open MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Ust-Nera\n28178  Crea MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Ust-Nera.aes\n28178  Del  MAJ  Match OCD- /tmp/tmp8imczwuu/Asia/Ust-Nera\n28178  Open MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Macao\n28178  Crea MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Macao.aes\n28178  Del  MAJ  Match OCD- /tmp/tmp8imczwuu/Asia/Macao\n28178  Open MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Magadan\n28178  Crea MIN  -     OCD- /tmp/tmp8imczwuu/Asia/Magadan.aes\n28178  Del  MAJ  Match OCD- /tmp/tmp8imczwuu/Asia/Magadan\n868    Open OK   -     ---- /etc/fstab\n868    Open OK   -     ---- /proc/self/mountinfo\n868    Open OK   -     ---- /proc/self/mountinfo\n221    Open OK   -     ---- /proc/525/comm\n221    Open OK   -     ---- /proc/525/cmdline\n221    Open OK   -     ---- /proc/525/status\n221    Open OK   -     ---- /proc/525/attr/current\n221    Open OK   -     ---- /proc/525/sessionid\n</code></pre>"},{"location":"machinelearning/","title":"Machine Learning","text":""},{"location":"machinelearning/#machine-learning","title":"Machine Learning","text":"<p>The machine learning pipeline follows a simple flow:</p> <pre><code>graph LR\n  A(Events from detector) --&gt; B(Data preparation &lt;br/&gt;&amp; feature engineering)\n  B --&gt; C(Model development &lt;br/&gt;&amp; training)\n  C --&gt; D(Model evaluation)\n  D --&gt; E(Prediction)</code></pre> <p>Events are received from the Python detector frontend program, which formats them into a .csv consisting of a row per event with columns that are the features used for our classifier to base its predictions on.</p> <p>Based on the events received, the following features can be computed and normalised. This step corresponds to the Data preparation &amp; feature engineering step, which is performed by the dataprep.py program:</p> <ul> <li>For each type of event:<ul> <li>Average number of events per second;</li> <li>Maximum number of events per second (rate); </li> <li>Total number of events.</li> </ul> </li> <li>For each possible event patterns:<ul> <li>Average number of pattern matches per second;</li> <li>Maximum number of patterns matches per second (rate);  Total number of pattern matches.</li> </ul> </li> <li>Type of files accessed:<ul> <li>Sensitive Linux files (e.g., /etc/, /var/, /usr/, /sys/), especially if they are modified or created.</li> </ul> </li> </ul> <p>For the next step, we considered simple classifiers like kNN (k-Nearest Neighbors) and SVM (Support Vector Machine) with different kernels. SVM works particularly well for our dataset and purpose, since it is very effective in high-dimensional spaces and relatively memory efficient.</p> <p>The processed data is split into training and testing data, following a 60/40% split. This means that the resulting Machine Learning model is validated using data that wasn\u2019t used for training.</p> <p>When new data is processed through the model, it will assign a label depending on whether it is classified as ransomware or benign.</p>"},{"location":"machinelearning/#instructions","title":"Instructions","text":"<p>Prepare the data: </p><pre><code>$ ./dataprep.py\n</code></pre> <p>Sample output: </p><pre><code>       C_max  C_sum  D_max  D_sum  E_max  E_sum  O_max  O_sum  P_max  P_sum   CDO  COC  COO   DOC  DOO   EEE   OCD  OCO  OOC  OOO\nPID\n1          0      0      0      0      0      0      4      5      0      0     0    0    0     0    0     0     0    0    0    3\n221        0      0      0      0      0      0     20     20      0      0     0    0    0     0    0     0     0    0    0   18\n626        0      0      0      0      0      0     16     16      0      0     0    0    0     0    0     0     0    0    0   14\n714        0      0      0      0      0      0     12     12      0      0     0    0    0     0    0     0     0    0    0   10\n838        0      0      0      0      0      0      3      9      0      0     0    0    0     0    0     0     0    0    0    7\n1019       0      0      0      0     36   1501      0      0      0      0     0    0    0     0    0  1499     0    0    0    0\n1195       0      0      0      0      0      0     11     11      0      0     0    0    0     0    0     0     0    0    0    9\n1196       0      0      0      0      0      0      7      7      0      0     0    0    0     0    0     0     0    0    0    5\n1197       0      0      0      0      0      0     10     10      0      0     0    0    0     0    0     0     0    0    0    8\n1202       0      0      0      0      0      0      8      8      0      0     0    0    0     0    0     0     0    0    0    6\n1230       0      0      0      0      0      0      1     60      0      0     0    0    0     0    0     0     0    0    0   58\n1237       0      0      0      0      0      0      1     36      0      0     0    0    0     0    0     0     0    0    0   34\n1238       0      0      0      0      0      0      1     27      0      0     0    0    0     0    0     0     0    0    0   25\n1239       0      0      0      0      0      0      1     38      0      0     0    0    0     0    0     0     0    0    0   36\n1240       0      0      0      0      0      0      1     30      0      0     0    0    0     0    0     0     0    0    0   28\n1555       0      0      0      0    207   1978      0      0      0      0     0    0    0     0    0  1976     0    0    0    0\n29952      0      0      0      0     63    326      0      0      0      0     0    0    0     0    0   324     0    0    0    0\n30490     17   1690     17   1691      0      0     20   1750     17   1690  1689    0    0  1635   55     0  1690    0   55    5\n30493      0      0      0      0      0      0     12     19      0      0     0    0    0     0    0     0     0    0    0   17\n30495    233   1216     17    983      0      0    278   1458     17    983   983  228    5   949   34     0   983  233   39  201\n30496      0      0      0      0      0      0      3      3      0      0     0    0    0     0    0     0     0    0    0    1\n</code></pre>"},{"location":"machinelearning/#model-development","title":"Model development","text":"<p>Train the model and show predictions: </p><pre><code>$ ./model.py --train --labels file\n</code></pre> <p>Sample output: </p><pre><code>Score: 1.000000\n      PID  C_max  C_sum  D_max  D_sum  E_max  E_sum  O_max  O_sum  P_max  P_sum   CDO  COC  COO   DOC  DOO   EEE   OCD  OCO  OOC  OOO  PREDICTION\n0       1      0      0      0      0      0      0      4      5      0      0     0    0    0     0    0     0     0    0    0    3           0\n1     221      0      0      0      0      0      0     20     20      0      0     0    0    0     0    0     0     0    0    0   18           0\n2     626      0      0      0      0      0      0     16     16      0      0     0    0    0     0    0     0     0    0    0   14           0\n3     714      0      0      0      0      0      0     12     12      0      0     0    0    0     0    0     0     0    0    0   10           0\n4     838      0      0      0      0      0      0      3      9      0      0     0    0    0     0    0     0     0    0    0    7           0\n5    1019      0      0      0      0     36   1501      0      0      0      0     0    0    0     0    0  1499     0    0    0    0           0\n6    1195      0      0      0      0      0      0     11     11      0      0     0    0    0     0    0     0     0    0    0    9           0\n7    1196      0      0      0      0      0      0      7      7      0      0     0    0    0     0    0     0     0    0    0    5           0\n8    1197      0      0      0      0      0      0     10     10      0      0     0    0    0     0    0     0     0    0    0    8           0\n9    1202      0      0      0      0      0      0      8      8      0      0     0    0    0     0    0     0     0    0    0    6           0\n10   1230      0      0      0      0      0      0      1     60      0      0     0    0    0     0    0     0     0    0    0   58           0\n11   1237      0      0      0      0      0      0      1     36      0      0     0    0    0     0    0     0     0    0    0   34           0\n12   1238      0      0      0      0      0      0      1     27      0      0     0    0    0     0    0     0     0    0    0   25           0\n13   1239      0      0      0      0      0      0      1     38      0      0     0    0    0     0    0     0     0    0    0   36           0\n14   1240      0      0      0      0      0      0      1     30      0      0     0    0    0     0    0     0     0    0    0   28           0\n15   1555      0      0      0      0    207   1978      0      0      0      0     0    0    0     0    0  1976     0    0    0    0           0\n16  29952      0      0      0      0     63    326      0      0      0      0     0    0    0     0    0   324     0    0    0    0           0\n17  30490     17   1690     17   1691      0      0     20   1750     17   1690  1689    0    0  1635   55     0  1690    0   55    5           1\n18  30493      0      0      0      0      0      0     12     19      0      0     0    0    0     0    0     0     0    0    0   17           0\n19  30495    233   1216     17    983      0      0    278   1458     17    983   983  228    5   949   34     0   983  233   39  201           1\n20  30496      0      0      0      0      0      0      3      3      0      0     0    0    0     0    0     0     0    0    0    1           0\n</code></pre>"},{"location":"paper/","title":"Paper","text":"<p>Source</p> <p></p>"},{"location":"simulator/","title":"Simulator","text":""},{"location":"simulator/#simulator","title":"Simulator","text":""},{"location":"simulator/#installation","title":"Installation","text":"<pre><code>$ python3 -m pip install -r requirements.txt\n</code></pre>"},{"location":"simulator/#encrypt-files","title":"Encrypt files","text":"<pre><code># encrypt temporary files in /tmp/tmpxxx\n$ ./simulator.py --password xu18d7wfe2edt\n\n# encrypt files in given directory\n$ ./simulator --dir /path/to/dir --password xu18d7wfe2edt\n</code></pre>"},{"location":"simulator/#decrypt-files","title":"Decrypt files","text":"<pre><code># decrypt temporary files in /tmp/tmpxxx\n$ ./simulator.py --mode decrypt --password xu18d7wfe2edt\n\n# decrypt files in given directory\n$ ./simulator.py --mode decrypt --dir /path/to/dir --password xu18d7wfe2edt\n</code></pre>"},{"location":"simulator/#tracing-python-execution-flow","title":"Tracing python execution flow","text":"<pre><code>$ ./simulator.py --password b12hn736bxe &amp; sudo uflow -l python $!\n</code></pre>"},{"location":"simulator/#view-encrypted-files","title":"View encrypted files","text":"<pre><code>$ xxd UTC.aes\n\n00000000: 4145 5302 0000 1b43 5245 4154 4544 5f42  AES....CREATED_B\n00000010: 5900 7079 4165 7343 7279 7074 2036 2e30  Y.pyAesCrypt 6.0\n00000020: 2e30 0080 0000 0000 0000 0000 0000 0000  .0..............\n00000030: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000040: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000050: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000060: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000070: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000080: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n00000090: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n000000a0: 0000 0000 0000 f7d0 323f b478 ca7d 211c  ........2?.x.}!.\n000000b0: aa4a 3ef4 ffa7 f154 8553 7128 93e9 4d9d  .J&gt;....T.Sq(..M.\n000000c0: 34be 8dcb 4a92 a35e 7338 dc0c 7791 0a54  4...J..^s8..w..T\n000000d0: 3466 fd28 646f bc3f ddd2 aecf d238 ae56  4f.(do.?.....8.V\n000000e0: 4080 bb9f a40b c9f3 648f 7b32 79ed 5cd7  @.......d.{2y.\\.\n000000f0: 7429 40e8 5468 ee62 2b2d 6637 1ec7 9522  t)@.Th.b+-f7...\"\n00000100: b4d9 3bd2 0df9 72c5 db10 bf1f 3314 cc9c  ..;...r.....3...\n00000110: 904b 191f 1f6c 2ea8 c246 eef7 3ffe f8ac  .K...l...F..?...\n00000120: 802b 66ce f193 32a0 f452 d56d 472b 6363  .+f...2..R.mG+cc\n00000130: 0c47 454d d950 9d55 7c96 c968 d8f4 536c  .GEM.P.U|..h..Sl\n00000140: f120 19cb c166 e198 11f4 41ed 7410 81f5  . ...f....A.t...\n00000150: c6f7 2c38 c40f 1ed5 01bf a44c 19c5 866e  ..,8.......L...n\n00000160: 9908 d6be 64f1 a6e7 73e4 8a99 9898 2f19  ....d...s...../.\n00000170: 15df 1cab 2eef 27e2 2036 6245 f546 386c  ......'. 6bE.F8l\n00000180: 17bf 4dbf 0aac 0620 f849 1426 1a72 e67a  ..M.... .I.&amp;.r.z\n00000190: c204 7612 111d b86b aa83 1e7a 5ad8 76e7  ..v....k...zZ.v.\n000001a0: 12e0 22c0 3b22 21                        ..\".;\"!\n</code></pre>"},{"location":"slides/","title":"Slides","text":"<p>Source</p> <p></p>"}]}